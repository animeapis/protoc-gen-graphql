syntax = "proto3";

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

import "graphql/options.proto";

package animeshon.credentials.v1alpha1;

option go_package = "github.com/animeapis/go-genproto/credentials/v1alpha1;credentials";

service Keeper {
  option (google.api.default_host) = "credentials.animeapis.com";

  rpc GetCredentials(GetCredentialsRequest) returns (Credentials) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=users/*/credentials/*}"
    };
    option (graphql.method) = {
      field: "getCredentials"
      operation: "query"
    };
  }

  rpc ListCredentials(ListCredentialsRequest) returns (ListCredentialsResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/{parent=users/*}/credentials"
    };
    option (graphql.method) = {
      field: "listCredentials"
      operation: "query"
    };
  }

  rpc CreateCredentials(CreateCredentialsRequest) returns (Credentials) {
    option (google.api.http) = {
      post: "/v1alpha1/{credentials.name=users/*/credentials/*}"
      body: "*"
    };
    option (graphql.method) = {
      field: "createCredentials"
      operation: "mutation"
    };
  }

  rpc DeleteCredentials(DeleteCredentialsRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1alpha1/{name=users/*/credentials/*}"
    };
    option (graphql.method) = {
      field: "deleteCredentials"
      operation: "mutation"
    };
  }

  rpc ActAsCredentials(ActAsCredentialsRequest) returns (ActAsCredentialsResponse) {
    option (google.api.http) = {
      post: "/v1alpha1/{name=users/*/credentials/*}:actAs"
      body: "*"
    };
    option (graphql.method) = {
      field: "actAsCredentials"
      operation: "mutation"
    };
  }
}

service OAuth2 {
  option (google.api.default_host) = "credentials.animeapis.com";

  rpc SignIn(SignInRequest) returns (SignInResponse) {
    option (google.api.http) = {
      post: "/v1alpha1/{name=users/*/flows/*}:signin"
      body: "*"
    };
    option (graphql.method) = {
      field: "signIn"
      operation: "mutation"
    };
  }

  rpc Exchange(ExchangeRequest) returns (ExchangeResponse) {
    option (google.api.http) = {
      post: "/v1alpha1/{name=users/*/flows/*}:exchange"
      body: "*"
    };
    option (graphql.method) = {
      field: "exchange"
      operation: "mutation"
    };
  }
}

// Credentials are persistent authentication
message Credentials {
  enum AuthenticationMethod {
    // The default value. This value is used if the state is omitted.
    AUTHENTICATION_METHOD_UNSPECIFIED = 0;

    // The authentication method used is username/password.
    BASIC = 1;

    // The authentication method used is OAuth 2.0.
    OAUTH2 = 2;
  }

  // The resorce name of the credentials.
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  
  // The unique and immutable identifier of the credentials.
  string uid = 2 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The principal of the credentialscode, usually the username.
  string principal = 3 [(google.api.field_behavior) = IMMUTABLE];

  // Whether these credentials are active and can be used to perform requests.
  google.protobuf.BoolValue active = 4 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Which authentication method is used by the credentials.
  AuthenticationMethod authentication_method = 5 [
    (google.api.field_behavior) = OUTPUT_ONLY];

  // When the credentials were last used.
  google.protobuf.Timestamp last_activity_time = 6 [
    (google.api.field_behavior) = OUTPUT_ONLY];
}

message CreateCredentialsRequest {
  message Basic {
    string username = 1 [(google.api.field_behavior) = REQUIRED];
    string password = 2 [(google.api.field_behavior) = REQUIRED];
  }

  message OAuth2 {
    string principal = 1 [(google.api.field_behavior) = OPTIONAL];
    string refresh_token = 2 [(google.api.field_behavior) = REQUIRED];
  }

  // The credentials to create.
  Credentials credentials = 1 [(google.api.field_behavior) = REQUIRED];

  // The credentials payload with the sensitive data.
  oneof payload {
    // Basic authentication credentials composed by username and password.
    Basic basic = 2;

    // OAuth 2.0 authentication credentials composed by a refresh token.
    OAuth2 oauth2 = 3;
  }
}

message GetCredentialsRequest {
  // The name of the credentials to retrieve.
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message ListCredentialsRequest {
  // The parent, which owns this collection of credentials.
  string parent = 1 [(google.api.field_behavior) = REQUIRED];

  // If unspecified, server will pick an appropriate default.
  int32 page_size = 2;

  // The value returned from the previous call.
  string page_token = 3;

  // A filter to be applied to results.
  string filter = 4;
}

message ListCredentialsResponse {
  // The list of credentials.
  repeated Credentials credentials = 1;

  // A token to retrieve next page of results.
  string next_page_token = 2;
}

message DeleteCredentialsRequest {
  // The name of the credentials to delete.
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message ActAsCredentialsRequest {
  // The resorce name of the credentials.
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message ActAsCredentialsResponse {
  message Basic {
    string username = 1;
    string password = 2;
  }

  // The access token to be attached in the request headers. Only returned for
  // OAuth 2.0 credentials.
  string access_token = 1;

  // The basic credentials (username and password) to be used to authenticate
  // requests, as different APIs implement authentication in different ways,
  // the plain basic credentials are provided as-is.
  Basic basic = 2;
}

message SignInRequest {
  // The resorce name of the flow.
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message SignInResponse {
  // The authorization url that the user should be redirect to for web sign-in.
  string authorization_url = 1;
}

message ExchangeRequest {
  // The resorce name of the flow.
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  // The OAuth 2.0 code returned from the authentication flow.
  string code = 2 [(google.api.field_behavior) = REQUIRED];

  // The OAuth 2.0 state returned from the authentication flow.
  string state = 3 [(google.api.field_behavior) = REQUIRED];
}

message ExchangeResponse {
  // The credentials created by the authentication flow.
  Credentials credentials = 1;
}
